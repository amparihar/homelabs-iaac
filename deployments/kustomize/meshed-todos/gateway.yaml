---
##################################################################################################
# virtual gateway
##################################################################################################
apiVersion: appmesh.k8s.aws/v1beta2
kind: VirtualGateway
metadata:
  name: ingress-gw
spec:
  namespaceSelector:
    matchLabels:
      gateway: ingress-gw
  podSelector:
    matchLabels:
      app: todos-ingress-gw
  listeners:
    - portMapping:
        port: 8080
        protocol: http
---
apiVersion: v1
kind: Service
metadata:
  name: ingress-gw
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb-ip
    #service.beta.kubernetes.io/aws-load-balancer-internal: "true"
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-connection-idle-timeout: "120"
spec:
  type: LoadBalancer
  ports:
    - port: 80
      targetPort: 8080
  selector:
    app: todos-ingress-gw
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: envoy-proxy-ingress
spec:
  replicas: 1
  selector:
    matchLabels:
      app: todos-ingress-gw
  template:
    metadata:
      labels:
        app: todos-ingress-gw
    spec:
      serviceAccountName: todos-pod
      containers:
        - name: envoy
          image: 840364872350.dkr.ecr.us-west-2.amazonaws.com/aws-appmesh-envoy:v1.17.2.0
          ports:
            - containerPort: 8080
          resources:
            limits:
              cpu: 200m
              memory: 512Mi
            requests:
              cpu: 100m
              memory: 200Mi
---